'use strict';

var SPOmnibox = {};

// constants
SPOmnibox.constants = {
    'spServer': 'https://www.ibm.com',
    'sfRestUrl': '/support/sfrest/',
    'scsiUrl': '/support/screst',
    'prodSearch': 'product-search-result',
    'prodPage': '//www.ibm.com/support/home/product/{key}/{name}',
    'drupalSFProdSearch': '/support/pages/product/query?_format=json&q=',
    //'prodSearchPage': '/support/home/product-search?q=',
    //'prodSearchPage': '/mysupport/s/recordlist/Product2/Recent?language=en_US&q=',
    'prodSearchPage': '/support/pages/product/query?q=',
    'mobileSearchPage': '/support/home/mobile-search?q=',
    // 'recentProducts': '/user-products/recent-products/?mediatype=json&limit=4',
    'recentProducts': '/user-history?mediatype=json&limit=4',
    'WDSearch': 'wdsearch',
    // 'DocSearchUrl': 'https://www-api.ibm.com/api/v1/search/aggr/rest/appid/spng',
    'DocSearchUrl': 'https://www-api.ibm.com/search/api/v1/ibmcom/appid/dblue/responseFormat/json',
    // 'DocSearchQuery': '?query={q}&nr={nr}&page=1&rmdt=scope%2Cdcdate%2Centitled&disableGrouping=title_snippet',
    // 'DocSearchPage': (/^www(-\d{2,3})?(\.\w{2,30})?\.ibm\.com$/i.test(window.location.hostname) ? 'https://www.ibm.com' : '') + '/support/home/search-results?q=',
    // 'DocSearchUrl': '/support/kws.wss',
    'DocSearchQuery': '?query={q}&nr={nr}&page=1&scope=dblue&fr=0&rmdt=dcdate%2Cratings%2Csocialtags%2Cscope&disableGrouping=title_snippet&filter=(language:en)',
    // 'DocSearchPage': '/support/search.wss?q=',
    // 'DocSearchPage': '//www.ibm.com/support/search.wss?q=',
    'DocSearchPage': window.location.pathname.indexOf('/support/pages/') != -1 ? '/support/pages/ibmsearch?q=' : '/ibmsearch?q=',
    'DocSearchMaxResults': Infinity,
    'displayCount': 4,
    'typeAheadDelay': 750,
    'ajaxTimeout': 30000,
    'mobile': false,
    'tltsid': 'TLTSID',
    'coreid6': 'CoreID6'
};

function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = dcurl(document.cookie);
    var ca = decodedCookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

function htmlEscape(str) {
    return String(str)
        .replace(/\&/g, '&amp;')
        .replace(/\</g, '&lt;')
        .replace(/\>/g, '&gt;')
        .replace(/\"/g, '&quot;')
        .replace(/\'/g, '&#x27');
}

function htmlUnescape(str) {
    return String(str)
        .replace(/&amp;/g, '\&')
        .replace(/&lt;/g, '\<')
        .replace(/&gt;/g, '\>')
        .replace(/&quot;/g, '\"')
        .replace(/&#x27/g, '\'');
}

function ecurl(value) {
    return encodeURIComponent(value);
}

function dcurl(value) {
    return decodeURIComponent(value);
}

function isEven(n) {
    return n % 2 == 0;
}

function splice(input, list) {
    var arr = dcurl(input).split(" ");
    var arrList = list.split(",");
    var num = 0;

    for (var i = arr.length; i--;) {
        if (arr[i].indexOf('"') != -1) {
            num++;
        }
        if (arr[i].indexOf('"') == -1 || !arr[i].startsWith("-")) {
            for (var j in arrList) {
                if (arr[i].toLowerCase() === arrList[j].toLowerCase() && isEven(num)) {
                    arr.splice(i, 1);
                }
            }
        }
    }
    return ecurl(arr.join(" "));
}

function appendOperator(input) {
    if (typeof input == "undefined" || input == null) return '';
    var input = dcurl(input.replace(/\(|\)/g, ''));
    var output = '';
    var count = 0;

    for (var i = 0; i < input.length; i++) {
        switch (input[i]) {
            case '(':
            case ')':
                break;
            case ' ':
                if ((i + 1 <= input.length && input[i + 1] != '-' && input[i + 1] != '|' && i - 1 >= 0 && input[i - 1] != '|' && isEven(count)) &&
                    ((i + 3 <= input.length && input[i + 1] !== 'A' && input[i + 2] !== 'N' && input[i + 3] !== 'D') ||
                        (i + 2 <= input.length && input[i + 1] !== 'O' && input[i + 2] !== 'R') ||
                        (i - 2 <= input.length && input[i - 2] !== 'O' && input[i - 1] !== 'R'))) {
                    output += ' AND ';
                } else {
                    output += input[i];
                }
                break;
            case '"':
                count++;
            default:
                output += input[i];
                break;
        }
    }
    return ecurl(output);
}

function isSearchResultPage() {
    return (window.location.href.indexOf('search.wss?') !== -1);
}

function getURLParameter(sParam) {
    var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split('&');

    for (var i = 0; i < sURLVariables.length; i++) {
        var sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] == sParam) {
            return sParameterName[1];
        }
    }
    return "";
}

// State
SPOmnibox.state = {
    timerHandle: 0,
    raceNum: 0
};

// Init code
jQuery(document).ready(function () {
    // document ready - enable the omnibox
    SPOmnibox.sc = new SPSearchController();
    SPOmnibox.dc = new SPDisplayController(SPOmnibox.sc);
    SPOmnibox.prodSearch = new SPProdSearch();
    SPOmnibox.wdSearch = new WDSearch();
    SPOmnibox.docSearch = new DocSearch();

    // Check to see if the omnibox div has a 'size' attribute
    var sizeAttr = jQuery('#spng-omnibox').attr('size');
    // console.log("Size attribute:", sizeAttr);

    // Inject template commented - filled in from twig template
    //jQuery('#spng-omnibox').html(SPOmnibox.templates.master);
    jQuery('#spng-search-query').val(dcurl(getURLParameter('q').replace(/\+/g, ' ')).substring(0, 125));
    jQuery('#spng-search-query').keypress(function (e) {
        if (e.which == 13) { e.preventDefault(); }
        SPOmnibox.inputChangeHandler();
    });
    jQuery('#spng-search-button').click(function () { SPOmnibox.inputChangeHandler(); });
    // jQuery('#spng-search-button').click(function() { SPOmnibox.fireSearch(); });
    // jQuery('#spng-search-button').click(function() { console.log('Click!!'); SPOmnibox.onButton(); });
    jQuery(document.body).on('click', '#sp-doc-results ul li .ibm-search-link', function (e) {
        e.preventDefault();
        if (jQuery('#spng-tc-check-box').is(':checked')) {
            jQuery('#spng-tc-check').hide();
        }
        jQuery('#spng-search-typeahead-wrapper').hide();
        if (isSearchResultPage()) {
            spngChangeUrl();
            angular.element(document.getElementById('ng_searchresult')).scope().sr_doSearch(jQuery('#spng-search-query').val(), true);
        } else {
            window.location.href = jQuery('#sp-doc-results ul li .ibm-search-link').attr('href');
        }
    });
    if (getURLParameter('tc')) {
        jQuery("#spng-search-query").attr("placeholder", "Search within results");
        jQuery('#spng-tc-check').show();
    }
    if (sizeAttr) {
        if (sizeAttr === 'home') {
            jQuery('#spng-omnibox').addClass('ibm-padding-top-r1');
            jQuery('#spng-search').addClass('ibm-center ibm-margin-top-r1');
            jQuery('#spng-search-query').addClass('home-search-query ibm-h2 ibm-h3-medium ibm-h4-small');
            jQuery('#spng-search-button').addClass('home-search-link ibm-h2 ibm-h3-medium ibm-h4-small');
            jQuery('#spng-search-typeahead').addClass('home-search-results');
        } else if (sizeAttr === 'small') {
            jQuery('#spng-search').addClass('ibm-margin-top-r1 ibm-padding-bottom-0');
            jQuery('#spng-search-query').addClass('small-search-query');
            jQuery('#spng-search-button').addClass('small-search-link ibm-h4');
            jQuery('#spng-search-typeahead').addClass('small-search-results');
        }
    }

    // Add 'blur' handler
    jQuery("body").click(function (e) {
        // console.group('body blur handler');
        var $target = jQuery(e.target);
        var $parentsUntil = $target.parentsUntil('#spng-search');
        // console.debug('$target: %o; $parentsUntil: %o; #parents: %d', $target, $parentsUntil, $parentsUntil.length);
        if ($parentsUntil.length) {
            SPOmnibox.dc.hide();
            SPOmnibox.dc.reset();
        }
        // console.groupEnd();
    });

    jQuery("#spng-search-query").focus(function (e) {
        // Need a short timeout to make sure the suggestion widget has time to clear
        setTimeout(SPOmnibox.dc.onFocus.bind(SPOmnibox.dc), 100);
    });

    // Mobile mode - for phones, if width < 768 px, no type-ahead and results on a separate page
    /*if (jQuery(document).width() <= 768) {
        SPOmnibox.constants.mobile = true;
    }*/

    // set up the suggestions widgets
    if (typeof spngSearchSuggestions !== "undefined" && !SPOmnibox.constants.mobile && sizeAttr !== 'small') {
        // console.log("suggestion init", SPOmnibox.constants.mobile);
        jQuery.getJSON('../suggestions/suggestions.json', function (data) {
            if (data && data.suggestions) {
                spngSearchSuggestions.init('spng-search-query', data.suggestions, {}, ['spng-search-button']);
            }
        }).fail(function (err) {
            // console.log("Suggestions JSON call failed", err);
        });
    }

    // query the user's recently viewed products
    jQuery.ajax({
        type: 'GET',
        url: SPOmnibox.constants.spServer + SPOmnibox.constants.scsiUrl + SPOmnibox.constants.recentProducts,
        contentType: 'text/plain',
        datatype: "application/json",
        timeout: SPOmnibox.constants.ajaxTimeout,
        xhrFields: {
            withCredentials: true
        }
    }).done(function (data) {
        try {
            var prevProducts = [];
            if (data.ViewedItem) {
                for (var i = 0; i < data.ViewedItem.length; i++) {
                    var pp = {};
                    pp.key = data.ViewedItem[i].esiKeyValue;
                    pp.name = data.ViewedItem[i].esiProductName;
                    var newUrl = String(SPOmnibox.constants.prodPage);
                    newUrl = newUrl.replace('{key}', pp.key);
                    var pName = String(pp.name);
                    pName = pName.replace(/_/g, ' ');
                    pName = ecurl(pName);
                    newUrl = newUrl.replace('{name}', pName);
                    pp.url = newUrl;
                    pp.class = 'ibm-generic-link';
                    prevProducts.push(pp);
                }
            }
            SPOmnibox.dc.setPrevViewedProducts(prevProducts);
        } catch (err) {
            // console.log("Error from recently viewed products service", err);
        }
    });
});

// Change handler
SPOmnibox.inputChangeHandler = function () {
    SPOmnibox.dc.keyPressed();
    if (!SPOmnibox.constants.mobile) {
        if (SPOmnibox.timerHandle !== 0) {
            clearTimeout(SPOmnibox.state.timerHandle);
        }
        SPOmnibox.state.timerHandle = window.setTimeout(SPOmnibox.fireSearch, SPOmnibox.constants.typeAheadDelay);
    }
};

// Button handler
SPOmnibox.onButton = function () {
    var q = jQuery('#spng-search-query').val();
    q = q.trim();
    if (q && q.length > 0) {
        if (SPOmnibox.constants.mobile) {
            q = ecurl(q);
            window.location = SPOmnibox.constants.spServer + SPOmnibox.constants.mobileSearchPage + q;
        } else {
            SPOmnibox.fireSearch();
        }
    }
};

// Start in-widget search
SPOmnibox.fireSearch = function () {
    SPOmnibox.state.timerHandle = 0;
    var q = jQuery('#spng-search-query').val();
    q = q.trim();
    if (q && q.length > 0) {
        SPOmnibox.state.q = ecurl(q);
        SPOmnibox.state.raceNum = new Date().getTime();
        SPOmnibox.sc.reset(SPOmnibox.state.raceNum);
        SPOmnibox.prodSearch.doSearch(SPOmnibox.state.q, SPOmnibox.state.raceNum, SPOmnibox.sc, SPOmnibox.dc);
        //SPOmnibox.wdSearch.doSearch(SPOmnibox.state.q, SPOmnibox.state.raceNum, SPOmnibox.sc, SPOmnibox.dc);
        SPOmnibox.docSearch.doSearch(SPOmnibox.state.q, SPOmnibox.state.raceNum, SPOmnibox.sc, SPOmnibox.dc);
        SPOmnibox.dc.startSearch();
    } else {
        SPOmnibox.dc.hide();
    }
};

// Product Search engine
var SPProdSearch = function () { };
SPProdSearch.prototype.doSearch = function (query, searchId, sc, dc) {
    //var purl = SPOmnibox.constants.spServer + SPOmnibox.constants.sfRestUrl + SPOmnibox.constants.prodSearch + '?q=' + query + '&race-condition-number=' + searchId + '&result-size=' + (SPOmnibox.constants.displayCount + 1);
    var purl = SPOmnibox.constants.drupalSFProdSearch + query;
    sc.start(searchId);
    var request = {
        type: 'GET',
        url: purl,
        contentType: 'text/plain',
        datatype: "application/json",
        timeout: SPOmnibox.constants.ajaxTimeout,
        xhrFields: {
            withCredentials: true
        }
    };
    jQuery.ajax(request).done(function (data) {
        if (data && data.products && data.products.length > 0) {
            var display = sc.complete(true, searchId);
            if (display) {
                var moreLink = false;
                var limit = SPOmnibox.constants.displayCount;
                if (!data.products || !data.products.length || data.products.length === 0) {
                    limit = 0;
                } else if (data.products && data.products.length && limit > data.products.length) {
                    limit = data.products.length;
                }
                if (data.products && data.products.length && data.products.length > SPOmnibox.constants.displayCount) {
                    moreLink = true;
                }
                var links = [];
                for (var i = 0; i < limit; i++) {
                    var aLink = {};
                    var datum = data.products[i];
                    aLink.title = datum.productName;
                    aLink.class = 'ibm-generic-link';
                    if (datum.url && datum.url.trim().length > 0) {
                        aLink.url = datum.url;
                    } else {
                        var newUrl = String(SPOmnibox.constants.prodPage);
                        newUrl = newUrl.replace('{key}', datum.key);
                        var pName = String(datum.productName);
                        pName = pName.replace(/_/g, ' ');
                        pName = ecurl(pName);
                        newUrl = newUrl.replace('{name}', pName);
                        aLink.url = newUrl;
                    }
                    links.push(aLink);
                }

                if (moreLink) {
                    var hitCount = '';
                    if (data.totalHits) {
                        hitCount = data.totalHits;
                    }
                    var aLink = {};
                    //aLink.title = 'View all ' + hitCount + ' product support pages related to"' + query + '"';
                    aLink.title = 'View all product support pages related to"' + query + '"';
                    aLink.url = SPOmnibox.constants.spServer + SPOmnibox.constants.prodSearchPage + query;
                    aLink.class = 'ibm-arrow-forward-bold-link';
                    aLink.staySamePortal = true;
                    links.push(aLink);
                }
                dc.displayProductResults(links);
            }
        } else {
            if (sc.complete(false, searchId)) {
                dc.displayProductResults([]);
            }
        }
    })
        .fail(function () {
            var display = sc.complete(false, searchId);
            if (display) {
                dc.displayProductResults([]);
            }
        });
};

// Watson Dialogs search engine
var WDSearch = function () { };
WDSearch.prototype.doSearch = function (query, searchId, sc, dc) {
    var purl = SPOmnibox.constants.spServer + SPOmnibox.constants.sfRestUrl + 'wdsearch?q=' + query;
    sc.start(searchId);
    var request = {
        type: 'GET',
        url: purl,
        contentType: 'text/plain',
        datatype: "application/json",
        timeout: SPOmnibox.constants.ajaxTimeout,
        xhrFields: {
            withCredentials: true
        }
    };
    jQuery.ajax(request).done(function (data) {
        var wdtext = '';
        for (var t = 0; t < data.text.length; t++) {
            wdtext += data.text[t].text;
        }
        if (wdtext && wdtext.length > 0) {
            var wdResults;
            try {
                wdResults = JSON.parse(wdtext);
                var links = [];
                var notes = [];

                for (var i = 0; i < wdResults.links.length; i++) {
                    var wdItem = {};
                    wdItem.title = wdResults.links[i].title;
                    if (wdResults.links[i].icon) {
                        wdItem.icon = wdResults.links[i].icon;
                    } else {
                        wdItem.icon = '0'; // default icon value;
                    }
                    if (wdResults.links[i].url === 'note') {
                        notes.push(wdItem);
                    } else {
                        var newUrl = wdResults.links[i].url;
                        // Need to update dblue links
                        if (newUrl.indexOf('support/docview.wss') !== -1 ||
                            newUrl.indexOf('/support/entdocview.wss') !== -1) {
                            newUrl = newUrl.startsWith('/') ? '//www.ibm.com/support' + newUrl + '&spng=10' : '//www.ibm.com/support/' + newUrl + '&spng=10';
                            // if (newUrl.startsWith('/')) {
                            //     newUrl = '//www.ibm.com/support' + newUrl;
                            // } else {
                            //     newUrl = '//www.ibm.com/support/' + newUrl;
                            // }
                        } else {
                            if (newUrl.indexOf('.ibm.com') === -1) {
                                newUrl = newUrl.startsWith('/') ? '//www.ibm.com' + newUrl : '//www.ibm.com/support/home/' + newUrl;
                                // if (newUrl.startsWith('/')) {
                                //     newUrl = '//www.ibm.com' + newUrl;
                                // } else {
                                //     newUrl = '//www.ibm.com/support/home/' + newUrl;
                                // }
                            }
                        }
                        wdItem.url = newUrl;
                        links.push(wdItem);
                    }
                }
                // console.log("wdResults", wdResults);
                var hasResults = false;
                if (links.length > 0 || notes.length > 0) {
                    hasResults = true;
                }
                var showResults = sc.complete(hasResults, searchId);
                if (showResults) {
                    dc.displayWDResults(notes, links);
                }
            } catch (e) {
                // console.log("Non-JSON text returned from WD", e);
                if (sc.complete(false, searchId)) {
                    dc.displayWDResults([], []);
                }
            }
        } else {
            var display = sc.complete(false, searchId);
            if (display) {
                dc.displayWDResults([], []);
            }
        }
    })
        .fail(function () {
            var display = sc.complete(false, searchId);
            if (display) {
                dc.displayWDResults([], []);
            }
        });
};

// Watson Explorer search engine
var DocSearch = function () { };
DocSearch.prototype.doSearch = function (q, searchId, sc, dc) {
    var excludeList = 'a,as,at,but,by,do,in,into,is,like,near,no,of,off,on,onto,or,out,to,up,upon,via,and,are,for,from,does,the,will,with';
    var query = SPOmnibox.constants.DocSearchQuery.replace('{q}', appendOperator(splice(q.trim(), excludeList)));
    query = query.replace('{nr}', String(SPOmnibox.constants.displayCount));
    var purl = SPOmnibox.constants.DocSearchUrl + query;
    sc.start(searchId);
    var request = {
        type: 'GET',
        url: purl,
        contentType: 'text/plain',
        datatype: 'application/json',
        timeout: SPOmnibox.constants.ajaxTimeout,
        xhrFields: {
            withCredentials: false
        }
    };
    jQuery.getJSON(request)
        .done(function (data) {
            // console.group('DocSearch: done() callback.');
            var hasResults = false;
            try {
                var results = data.resultset.searchresults.searchresultlist;
            } catch (error) {
                // console.debug('No result data: %o', error);
                results = [];
                var display = sc.complete(false, searchId);
                if (display) {
                    dc.displayDocResults([], false);
                }
            }
            if (results.length > 0) {
                hasResults = true;
            }
            var showResults = sc.complete(hasResults, searchId);
            if (hasResults && showResults) {
                // console.debug('Processing results...');
                var links = [];
                var resultCount = Math.min(data.resultset.searchresults.totalresults, SPOmnibox.constants.DocSearchMaxResults);
                for (var i = 0; i < results.length; i++) {
                    var r = results[i];
                    var l = {};
                    l.url = r.url;
                    l.title = r.highlightedtext && r.highlightedtext.title || r.title;
                    l.class = 'ibm-generic-link';
                    if (l.title) {
                        l.title = l.title.replace(/<(\/?)(?:b|em|i|strong)>/g, '<$1mark>');
                    } else {
                        l.title = '<em>Untitled document</em>';
                    }
                    links.push(l);
                }
                if (resultCount > SPOmnibox.constants.displayCount) {
                    // Add a 'More results' link to the search results page
                    var more = {};
                    var count = new Number(resultCount);
                    more.title = 'View more search results for "' + htmlEscape(dcurl(q)) + '" (' + count.toLocaleString() + ' )';
                    more.url = SPOmnibox.constants.DocSearchPage + dcurl(q);
                    more.class = 'ibm-search-link';
                    links.push(more);
                }
                dc.displayDocResults(links, false);
            } else {
                // console.debug('No results found');
                var display = sc.complete(false, searchId);
                if (display) {
                    dc.displayDocResults([], false);
                }
            }
            // console.groupEnd();
        })
        .fail(function () {
            // console.group('DocSearch: fail() callback');
            var display = sc.complete(false, searchId);
            if (display) {
                dc.displayDocResults([], true);
            }
            // console.groupEnd();
        });
};

// Display Controller
var SPDisplayController = function (searchController) {
    this.state = {};
    this.state.prevProd = [];
    this.reset(false);
    this.sc = searchController;
};
SPDisplayController.prototype.startSearch = function () {
    this.state.showResults = true;
    this.state.wd = {
        links: [],
        notes: [],
        zeroResults: false,
        sip: true,
        failure: false
    };
    this.state.prod = {
        results: [],
        zeroResults: false,
        sip: true,
        failure: false
    };
    this.state.doc = {
        links: [],
        zeroResults: false,
        sip: true,
        failure: false
    };
    this.updateDisplay();
};
SPDisplayController.prototype.onFocus = function (evt) {
    var q = jQuery("#spng-search-query").val();
    if (q.length === 0 && this.state.prevProd.length > 0) {
        this.state.showPrevProducts = true;
        this.updateDisplay();
    }
};
SPDisplayController.prototype.keyPressed = function (evt) {
    if (this.state.showPrevProducts) {
        this.state.showPrevProducts = false;
        this.updateDisplay();
    }
};
SPDisplayController.prototype.setPrevViewedProducts = function (prodList) {
    this.state.prevProd = prodList;
};
SPDisplayController.prototype.displayProductResults = function (data) {
    this.state.prod.results = data;
    this.state.prod.sip = false;
    if (!data || data.length === 0) {
        this.state.prod.zeroResults = true;
    }
    this.updateDisplay();
};
SPDisplayController.prototype.displayWDResults = function (notes, links) {
    this.state.wd.sip = false;
    this.state.wd.notes = notes;
    // Translate icon #'s into CSS classes
    for (var i = 0; i < links.length; i++) {
        var l = links[i];
        if (this.iconTypeMap[l.icon]) {
            l.class = this.iconTypeMap[l.icon];
        } else {
            l.class = this.iconTypeMap[0];
        }
    }
    this.state.wd.links = links;
    if (notes.length === 0 && links.length === 0) {
        this.state.wd.zeroResults = true;
    }
    this.updateDisplay();
};
SPDisplayController.prototype.displayDocResults = function (links, failure) {
    this.state.doc.links = links;
    this.state.doc.sip = false;
    this.state.doc.failure = failure;
    this.state.doc.zeroResults = (!links || links.length === 0);
    this.updateDisplay();
};
SPDisplayController.prototype.iconTypeMap = {
    0: 'ibm-forward-link', // Default link icon
    1: 'ibm-alert-link', // Critical alert
    2: 'ibm-caution-link', // Warning alert
    3: 'ibm-information-link', // Information alert
    4: 'ibm-new-link',
    5: 'ibm-confirm-link', // Checkmark
    6: 'ibm-rss-link', // RSS or other news feed
    7: 'ibm-recommended-link',
    8: 'ibm-pdf-link',
    9: 'ibm-arrow-forward-bold-link', // Important link
    10: 'ibm-external-link',
    11: 'ibm-event-link',
    12: 'ibm-password-link',
    13: 'ibm-popup-link',
    14: 'ibm-cloud-link',
    40: 'ibm-blog-link',
    41: 'ibm-forum-link',
    42: 'ibm-collaborate-link', // Generic social icon
    43: 'ibm-facebook-link',
    44: 'ibm-twitter-link',
    45: 'ibm-youtube-link',
    46: 'ibm-instagram-link',
    51: 'ibm-chat-link',
    52: 'ibm-email-link',
    53: 'ibm-phone-link',
    55: 'ibm-requestquote-link', // Registration
    64: 'ibm-download-link',
    65: 'ibm-signin-link',
    66: 'ibm-search-link'
};
SPDisplayController.prototype.updateDisplay = function () {
    if (this.state.showResults || this.state.showPrevProducts) {
        jQuery('#spng-search-typeahead-wrapper').show();
    } else {
        jQuery('#spng-search-typeahead-wrapper').hide();
    }
    if (this.sc.sip > 0) {
        jQuery('#spng-spinner').show();
    } else {
        jQuery('#spng-spinner').hide();
    }
    var prodResults = jQuery('#sp-prod-results');
    if (this.state.prod.sip === false) {
        if (this.state.prod.zeroResults) {
            prodResults.hide();
        } else {
            // Show prod results
            prodResults.html(
                Mustache.render(this.templates.productResults, { links: this.state.prod.results })
            );
            prodResults.show();
        }
    } else {
        prodResults.hide();
    }
    var wdResults = jQuery('#sp-wd-results');
    if (this.state.wd.sip === false) {
        if (this.state.wd.zeroResults) {
            wdResults.hide();
        } else {
            wdResults.html(
                Mustache.render(this.templates.wdResults, this.state.wd)
            );
            wdResults.show();
        }
    } else {
        wdResults.hide();
    }
    var docResults = jQuery('#sp-doc-results');
    if (this.state.doc.sip === false) {
        if (this.state.doc.zeroResults) {
            docResults.hide();
        } else {
            docResults.html(
                Mustache.render(this.templates.docResults, this.state.doc)
            );
            docResults.show();
        }
    } else {
        docResults.hide();
    }
    var noResults = jQuery('#sp-no-results');
    var docFailure = jQuery('#sp-doc-failure');
    if (this.sc.noResults) {
        if (this.state.doc.failure) {
            noResults.hide();
            docFailure.show();
        } else {
            noResults.show();
            docFailure.hide();
        }
    } else {
        noResults.hide();
        docFailure.hide();
    }
    var recentProducts = jQuery('#sp-prev-products');
    if (this.state.showPrevProducts && this.state.prevProd.length > 0) {
        recentProducts.html(
            Mustache.render(this.templates.prevProducts, { links: this.state.prevProd })
        );
        recentProducts.show();
    } else {
        recentProducts.hide();
    }
};
SPDisplayController.prototype.hide = function () {
    jQuery('#spng-search-typeahead-wrapper').hide();
    this.state.showResults = false;
};
SPDisplayController.prototype.reset = function (display) {
    this.state.showResults = false;
    this.state.showPrevProducts = false;
    this.state.wd = {
        notes: [],
        links: [],
        zeroResults: true,
        sip: false,
        failure: false
    };
    this.state.prod = {
        results: [],
        zeroResults: true,
        sip: false,
        failure: false
    };
    this.state.doc = {
        links: [],
        zeroResults: true,
        sip: false,
        failure: false
    };
    if (display) {
        this.updateDisplay();
    }
};

// Search Controller
var SPSearchController = function () { };
SPSearchController.prototype.reset = function (search_id) {
    this.sip = 0;
    this.search_id = search_id;
    this.noResults = false;
    this.results = false;
};
SPSearchController.prototype.start = function (search_id) {
    if (this.search_id === search_id) {
        this.sip++;
    }
};
SPSearchController.prototype.complete = function (results, search_id) {
    if (this.search_id === search_id) {
        this.sip--;
        this.results = this.results || results;
        if (this.sip === 0) {
            this.noResults = !this.results;
        }
        return true;
    } else {
        return false;
    }
};

// Templates
/*jshint multistr: true */
SPOmnibox.templates = {
    master: '\
    <form class="ibm-row-form ibm-home-search" enctype="multipart/form-data" id="spng-search" ng-submit="omniType()">\
    <p class="ibm-padding-top-r1 ibm-padding-bottom-0">\
    <input id="spng-search-query" name="text" size="40" type="search" autocomplete="off" placeholder="Search support or find a product"/> \
    <a title="Search" aria-label="Search" href="#" tabindex="-1" id="spng-search-button" ng-click="omniButton()" class="ibm-search-link ibm-textcolor-white-core common-search-link"></a> \
    </p>\
    <div id="spng-search-typeahead-wrapper" style="display:none" class="search-results-wrapper"> \
    <div id="spng-search-typeahead" class="common-search-results"> \
    <div id="spng-spinner" style="display:none"> \
    <h2 class="ibm-h2"><span class="ibm-spinner">&nbsp;</span></h2> \
    </div> \
    <div id="sp-no-results" style="display:none">\
    <div class="results"> \
    <p>No results were found for your search query.</p> \
    <div class="ibm-rule"><hr></div> \
    <h5 class="ibm-h5"><strong>Tips</strong></h5> \
    <p>To return expected results, you can:</p> \
    <ul> \
    <li><strong>Reduce the number of search terms.</strong> Each term you use focuses the search further.</li> \
    <li><strong>Check your spelling.</strong> A single misspelled or incorrectly typed term can change your result.</li> \
    <li><strong>Try substituting synonyms for your original terms.</strong> For example, instead of searching for "java classes", try "java training"</li> \
    <li><strong>Did you search for an IBM acquired or sold product ?</strong> If so, follow the appropriate link below to find the content you need.</li> \
    </ul></div></div>\
    <div id="sp-doc-failure" style="display:none"> \
    <div class="category">Our apologies</div> \
    <div class="results">\
    <p>Search results are not available at this time. Please try again later or use one of the other support options on this page.</p>\
    </div></div>\
    <div id="sp-prev-products" class="result_section"></div> \
    <div id="sp-wd-results" class="result_section"></div> \
    <div id="sp-prod-results" class="result_section"></div> \
    <div id="sp-doc-results" class="result_section"></div> \
    </div></div></form>'
};

// Mustache templates
/*jshint multistr: true */
SPDisplayController.prototype.templates = {
    productResults: '<div> \
    <h4 class="ibm-h4 ibm-left">Product support pages</h4> \
    <ul class="ibm-link-list ibm-indent"> \
    {{#links}}\
    {{#staySamePortal}}\
    <li><a class="{{class}}" href="{{url}}">{{title}}</a></li>\
    {{/staySamePortal}}\
    {{^staySamePortal}}\
    <li><a class="{{class}}" href="{{url}}" target="_blank">{{title}}</a></li>\
    {{/staySamePortal}}\
    {{/links}}\
    </ul> \
    </div>',
    wdResults: '<div> \
    <h4 class="ibm-h4 ibm-left">Recommended documents and resources</h4> \
    <ul class="ibm-link-list ibm-indent"> \
    {{#notes}}\
    <li><p class="ibm-item-note">{{title}}</p></li> \
    {{/notes}}\
    {{#links}} \
    <li><a class="{{class}}" href="{{url}}">{{title}}</a></li> \
    {{/links}}\
    </ul></div>',
    docResults: '<div> \
    <h4 class="ibm-h4 ibm-left">Search results</h4> \
    <ul class="ibm-link-list ibm-indent"> \
    {{#links}}\
    <li><a class="{{class}}" href="{{url}}" target="_blank">{{{title}}}</a></li> \
    {{/links}}\
    </ul> \
    </div>',
    prevProducts: '<div> \
    <h4 class="ibm-h4 ibm-left">Recent product support pages</h4> \
    <ul class="ibm-link-list ibm-indent"> \
    {{#links}}\
    <li><a class="{{class}}" href="{{url}}">{{name}}</a></li> \
    {{/links}}\
    </ul> \
    </div>'
};
